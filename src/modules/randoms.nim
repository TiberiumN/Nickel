include base
import sequtils
import macros
import times

template twoChoices(a, b): untyped = 
  if rand(2) == 0: a else: b

module "‚ö° –°–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞":
  command ["—Ä–∞–Ω–¥–æ–º"]:
    usage = [
      "—Ä–∞–Ω–¥–æ–º <$1> <$2> - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ $1-$2", 
      "—Ä–∞–Ω–¥–æ–º <$1> - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ $1"
    ]
    var 
      intArgs = newSeq[int]()
      failMsg = ""
      rndNumber = 0
    
    try:
      # –ü—ã—Ç–∞–µ–º—Å—è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ —á–∏—Å–ª–∞
      intArgs = args.mapIt(it.parseInt())
    except:
      failMsg = "–û–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ - –Ω–µ —á–∏—Å–ª–æ (–∏–ª–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–µ —á–∏—Å–ª–æ)"
    
    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    if failMsg != "":
      answer failMsg
      return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ —Ö–æ—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–∏–∂–µ –Ω—É–ª—è
    if intArgs.anyIt(it < 0):
      answer "–û–¥–Ω–æ –∏–∑ —á–∏—Å–µ–ª –º–µ–Ω—å—à–µ –Ω—É–ª—è!"
      return
    # –î–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ - –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞  
    if len(intArgs) == 2:
      let (start, stop) = (intArgs[0], intArgs[1])
      # –ï—Å–ª–∏ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –±–æ–ª—å—à–µ –Ω–∞—á–∞–ª–∞ - –≤—Å—ë —Ö–æ—Ä–æ—à–æ
      if abs(stop - start) > 0:
        rndNumber = start + rand(stop - start + 1)
      # –ï—Å–ª–∏ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –ú–ï–ù–¨–®–ï –Ω–∞—á–∞–ª–∞, –¥–µ–ª–∞–µ–º –Ω–∞–æ–±–æ—Ä–æ—Ç
      # –ö–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞—á–∞–ª–æ–º, –∞ –Ω–∞—á–∞–ª–æ - –∫–æ–Ω—Ü–æ–º
      else:
        rndNumber = stop + rand(start - stop + 1)
    
    # –¢–æ–ª—å–∫–æ –∫–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    elif len(intArgs) == 1:
      rndNumber = rand(intArgs[0])
    
    answer &"–ú–æ—ë —á–∏—Å–ª–æ - {rndNumber}"
  
  command ["–∫—É–±–∏–∫", "–∫–æ—Å—Ç—å"]:
    usage = "–∫—É–±–∏–∫ - —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –∏–≥—Ä–∞–ª—å–Ω—ã–π –∫—É–±–∏–∫"
    answer &"&#127922; –í—ã–ø–∞–ª –∫—É–±–∏–∫ —Å —á–∏—Å–ª–æ–º {rand(5) + 1}"
  
  command ["–º–æ–Ω–µ—Ç–∫–∞", "–º–æ–Ω–µ—Ç–∞"]:
    usage = "–º–æ–Ω–µ—Ç–∫–∞ - –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É (–º–æ–∂–µ—Ç –≤—ã–ø–∞—Å—Ç—å –æ—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞)"
    answer twoChoices("–í—ã–ø–∞–ª –æ—Ä—ë–ª!", "–í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞!")
  
  command ["–æ—Ü–µ–Ω–∏"]:
    usage = "–æ—Ü–µ–Ω–∏ - –æ—Ü–µ–Ω–∏—Ç—å —á—Ç–æ-—Ç–æ –ø–æ —à–∫–∞–ª–µ –æ—Ç 1 –¥–æ 10"
    answer &"{rand(10)+1}/10"
  
  command ["–∫–æ–≥–¥–∞"]:
    usage = "–∫–æ–≥–¥–∞ - —É–∑–Ω–∞—Ç—å, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ"
    const
      Variants = [
        "–ù–µ —Å–∫–∞–∂—É", "–ù–µ –∑–Ω–∞—é", "–ù–∏–∫–æ–≥–¥–∞", "–°–µ–≥–æ–¥–Ω—è",
        "–ó–∞–≤—Ç—Ä–∞", "–°–∫–æ—Ä–æ", "–ß–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π",
        "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ", "–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ", "–ß–µ—Ä–µ–∑ –¥–≤–µ –Ω–µ–¥–µ–ª–∏",
        "–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ", "–í —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ", 
        "–í –Ω–∞—á–∞–ª–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞", "–í —ç—Ç–æ–º –≥–æ–¥—É", "–í –∫–æ–Ω—Ü–µ –≥–æ–¥–∞", 
        "–í —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥—É"
      ]
      
      Months: array[Month, string] = [
        "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è", 
        "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
      ]
    if args.len < 1:
      answer usage
      return
    # –° 35% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –¥–∞—Ç—É 
    # –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ç–µ–∫—É—â–∏–π –≥–æ–¥ - +30 –ª–µ—Ç
    if rand(100) < 35:
      let 
        now = getTime()
        future = now + initTimeInterval(years=30)
        # –°–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞
        rdate = (now + rand(future.toUnix.int - now.toUnix.int).seconds).utc
        day = int(rdate.weekday) + 1
        month = Months[rdate.month]
        year = rdate.year
      answer &"–≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç {day} {month} {year} –≥–æ–¥–∞"
    else:
      answer sample(Variants)
  
  command ["—Ç–æ–ø"]:
    usage = "—Ç–æ–ø - —É–∑–Ω–∞—Ç—å, —Ç–æ–ø –ª–∏ —ç—Ç–æ"
    answer twoChoices("–Ω–µ —Ç–æ–ø", "—Ç–æ–ø")
  
  command ["–¥–∞", "–Ω–µ—Ç"]:
    usage = "–¥–∞, –Ω–µ—Ç - —É–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å"
    answer twoChoices("–î–∞", "–ù–µ—Ç")
  
  command ["–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å", "–∏–Ω—Ñ–∞"]:
    usage = "–∏–Ω—Ñ–∞ <–≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ> - –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —á–µ–≥–æ-–ª–∏–±–æ"
    answer &"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å - {rand(100) + 1}%"
  
  command ["—à–∞—Ä", "–ø—Ä–∞–≤–¥–∞"]:
    usage = "—à–∞—Ä <–≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ> - –ø—Ä–∞–≤–¥–∏–≤–æ –ª–∏ –¥–∞–Ω–Ω–æ–µ –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ"
    const 
      Answers = [
        "–ê–±—Å–æ–ª—é—Ç–Ω–æ —Ç–æ—á–Ω–æ!", "–î–∞.", 
        "–ù–µ—Ç.", "–°–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç.", "–ù–µ —É–≤–µ—Ä–µ–Ω...", "–û–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –Ω–µ—Ç!",
        "–ï—Å–ª–∏ —Ç—ã –Ω–µ —Ñ–∞–Ω–∞—Ç –∞–Ω–∏–º–µ, —É —Ç–µ–±—è –≤—Å–µ –ø–æ–ª—É—á–∏—Ç—Å—è!",
        "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º.", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ.",
        "–ê –∫–∞–∫ –∂–µ –∏–Ω–∞—á–µ?.", "–î–∞, –Ω–æ –µ—Å–ª–∏ —Ç–æ–ª—å–∫–æ —Ç—ã –Ω–µ —Å–º–æ—Ç—Ä–∏—à—å –∞–Ω–∏–º–µ.",
        "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª.", "–ù–µ –∑–Ω–∞—é.", "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª.", 
        "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ.", "–ù–µ –º–æ–≥—É –¥–∞—Ç—å —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç."
      ]
    answer &"üé± {sample(Answers)}"